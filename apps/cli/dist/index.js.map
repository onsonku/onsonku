{"version":3,"sources":["../src/cli/index.ts","../src/consts.ts","../src/index.ts"],"sourcesContent":["// @ts-expect-error\nimport * as p from \"@clack/prompts\";\nimport { Command } from \"commander\";\nimport figlet from \"figlet\";\nimport { DEFAULT_APP_NAME } from \"../consts.js\";\nimport { AvailablePackages } from \"../installers\";\ninterface CliFlags {\n  noGit: boolean;\n  noInstall: boolean;\n  default: boolean;\n  importAlias: string;\n  typescript: boolean;\n}\n\ninterface CliResults {\n  appName: string;\n  packages: AvailablePackages[];\n  flags: CliFlags;\n}\n\nconst defaultOptions: CliResults = {\n  appName: DEFAULT_APP_NAME,\n  packages: [\"typescript\"],\n  flags: {\n    noGit: false,\n    noInstall: false,\n    default: false,\n    importAlias: \"@/\",\n    typescript: true,\n  },\n};\nexport async function runCli() {\n  const cliResults = defaultOptions;\n\n  const program = new Command()\n    .name(\"OSON APP\")\n    .description(\"A CLI for creating React/Next/Astro/Express/Nest apps easily\")\n    .argument(\"[dir]\", \"Application name, directory name\")\n    .option(\"--next\", \"Whether to use Next.js by default\")\n    .option(\"--astro\", \"Whether to use Next.js by default\")\n    .option(\"--react\", \"Whether to use Next.js by default\")\n    .option(\"--express\", \"Whether to use Next.js by default\")\n    .option(\"--nest\", \"Whether to use Next.js by default\")\n    .option(\"--ts, --typescript\", \"Whether to use Typescript by default\")\n    .option(\"--lint, --eslint\", \"Whether to use ESLint by default\")\n    .parse(process.argv);\n  const appNameFromCli = program.args[0]\n  if (appNameFromCli) cliResults.appName = appNameFromCli;\n  cliResults.flags = program.opts();\n  if (cliResults.flags.default) return cliResults;\n  try {\n    const packageManager = \"pnpm\";\n    await figlet.text(\"Oson App\", {\n      font: \"Larry 3D 2\",\n      horizontalLayout: \"default\",\n      verticalLayout: \"default\",\n      width: 80,\n      whitespaceBreak: true,\n    },\n      function (err, data) {\n        if (err) {\n          console.log(\"Something went wrong...\");\n          console.dir(err);\n          return;\n        }\n        console.log(data);\n      }\n    );\n    const project = await p.group({\n      ...(!appNameFromCli && {\n        name: () => p.text({\n          message: \"Enter your project name\",\n          defaultValue: appNameFromCli\n        })\n      }),\n      language: () => {\n        return p.select({\n          message: \"Will you be using Typescript or Javascript\",\n          options: [\n            { value: \"javascript\", label: \"Javascript\", hint: \"Not recommended\" },\n            { value: \"typescript\", label: \"Typescript\", hint: \"Recommended\" },\n          ],\n          initialValue: \"typescript\"\n        })\n      },\n      framework: () => {\n        return p.select({\n          message: \"Which framework are you going to be using?\",\n          options: [\n            { value: \"nextjs\", label: \"Next.js\" },\n            { value: \"react\", label: \"React\" },\n            { value: \"astro\", label: \"Astro\" },\n            { value: \"express\", label: \"Express.js\" },\n            { value: \"nest\", label: \"Nest.js\" },\n          ],\n          initialValue: \"\",\n        })\n      },\n      pkgManager: () => {\n        return p.select({\n          message: \"Which package manager do you want to use?\",\n          options: [\n            { value: \"npm\", label: \"NPM\", hint: \"Not recommended\" },\n            { value: \"pnpm\", label: \"PNPM\", hint: \"Recommended\" },\n            { value: \"yarn\", label: \"Yarn\" },\n            { value: \"bun\", label: \"Bun\" }\n          ],\n          initialValue: \"pnpm\"\n        })\n      }\n    })\n    let frameworkConfig = await p.group({});\n    switch (project.framework) {\n      case \"nextjs\":\n        frameworkConfig = await p.group({\n          dependencies: () => p.multiselect({\n            message: \"Choose the needed dependencies\",\n            options: [\n              { label: \"Next Auth\", value: \"next-auth\" },\n              { label: \"Next Themes\", value: \"next-themes\" }\n            ]\n          })\n        })\n        break;\n      case \"react\":\n        frameworkConfig = await p.group({\n          dependencies: () => p.multiselect({\n            message: \"Choose the needed dependencies\",\n            options: [\n              { label: \"Redux\", value: \"@redux/toolkit\" },\n              { label: \"Zustand\", value: \"zustand\" },\n              { label: \"React-Router-DOM\", value: \"react-router-dom\" },\n              { label: \"Tanstack Router\", value: \"@tanstack/router\" },\n            ]\n          })\n        })\n        break\n      case \"astro\":\n        frameworkConfig = await p.group({\n          dependencies: () => p.multiselect({\n            message: \"Choose the needed dependencies\",\n            options: [\n              { label: \"Redux\", value: \"@redux/toolkit\" },\n              { label: \"Zustand\", value: \"zustand\" },\n              { label: \"React-Router-DOM\", value: \"react-router-dom\" },\n              { label: \"Tanstack Router\", value: \"@tanstack/router\" },\n            ]\n          })\n        })\n        break\n      case \"express\":\n        frameworkConfig = await p.group({\n          dependencies: () => p.multiselect({\n            message: \"Choose the needed dependencies\",\n            options: [\n              { label: \"Prisma\", value: \"prisma\" },\n              { label: \"Multer\", value: \"multer\" },\n              { label: \"Mongoose\", value: \"mongoose\" },\n              { label: \"Jest\", value: \"jest\" },\n              { label: \"Passport\", value: \"jest\" },\n              { label: \"Nodemailer\", value: \"nodemailer\" },\n              { label: \"Lodash\", value: \"lodash\" },\n              { label: \"Socket.IO\", value: \"socket.io\" },\n              { label: \"Winston\", value: \"winston\" },\n            ]\n          })\n        })\n        break\n      case \"nest\":\n        frameworkConfig = await p.group({\n          dependencies: () => p.multiselect({\n            message: \"Choose the needed dependencies\",\n            options: [\n              { label: \"Prisma\", value: \"prisma\" },\n              { label: \"Multer\", value: \"multer\" },\n              { label: \"Mongoose\", value: \"mongoose\" },\n              { label: \"Jest\", value: \"jest\" },\n              { label: \"Passport\", value: \"jest\" },\n              { label: \"Nodemailer\", value: \"nodemailer\" },\n              { label: \"Lodash\", value: \"lodash\" },\n              { label: \"Socket.IO\", value: \"socket.io\" },\n              { label: \"Winston\", value: \"winston\" },\n\n            ]\n          })\n        })\n        break\n      default:\n        frameworkConfig = await p.group({\n          dependencies: () => p.multiselect({\n            message: \"Choose the needed dependencies\",\n            options: [\n              { label: \"Typescript\", value: \"typescript\" },\n              { label: \"TS Reset\", value: \"@total-typescript/ts-reset\" },\n              { label: \"Zod\", value: \"zod\" },\n              { label: \"ESLint\", value: \"eslint\" },\n              { label: \"Prettier\", value: \"prettier\" }\n            ]\n          })\n        })\n        break;\n    }\n  } catch (error) {\n\n  }\n\n}","import path from \"path\";\nexport const DEFAULT_APP_NAME = \"oson-app\"\nconst distPath = path.dirname(process.cwd());\nexport const PKG_ROOT = path.join(distPath, \"../\");\n\n","#!/usr/bin/env node\nimport { runCli } from \"./cli\";\n\n(async () => {\n    await runCli();\n})();\n"],"mappings":"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","names":["p","import_commander","import_figlet","import_path","DEFAULT_APP_NAME","distPath","path","PKG_ROOT","defaultOptions","DEFAULT_APP_NAME","runCli","cliResults","program","appNameFromCli","packageManager","figlet","err","data","project","frameworkConfig","runCli"]}